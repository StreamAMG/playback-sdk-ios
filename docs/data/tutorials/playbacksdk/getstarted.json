{"sections":[{"chapter":"Getting Started","kind":"hero","title":"Playback SDK Overview","estimatedTimeInMinutes":30,"content":[{"inlineContent":[{"type":"text","text":"Playback SDK simplifies integrating video playback functionalities into OTT applications. It provides a unified interface for interacting with video APIs and managing playback logic."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Key Features:","type":"text"}]}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Abstraction:"}],"type":"strong"},{"type":"text","text":" Hides the complexities of underlying video APIs, allowing you to focus on the core playback experience."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Flexibility:"}]},{"text":" Supports different video providers and allows the creation of custom playback plugins for extended functionalities.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Error Handling:","type":"text"}]},{"type":"text","text":" Provides mechanisms to handle potential issues during playback and notify your application."}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"kind":"tasks","tasks":[{"title":"Installation","contentSection":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"To install the Playback SDK, follow these steps:"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add the Playback SDK dependency to your project using Swift Package Manager."}]}]}]},{"inlineContent":[{"type":"text","text":"Swift"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["dependencies: [","    .package(url: \"https:\/\/github.com\/your-organization\/playback-sdk.git\", .branch(\"master\"))","]"]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Import the ","type":"text"},{"code":"PlaybackSDK","type":"codeVoice"},{"text":" module in your Swift files.","type":"text"}]}]}],"start":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Swift"}]},{"type":"codeListing","code":["import PlaybackSDK"],"syntax":null}],"mediaPosition":"trailing","kind":"contentAndMedia"}],"anchor":"Installation","stepsSection":[{"code":"InitializeSdkExample.swift","caption":[],"media":null,"runtimePreview":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Step 1:"}],"type":"strong"},{"type":"text","text":" Initialize the Playback SDK by providing your API key."}]}]},{"media":null,"runtimePreview":null,"type":"step","code":"LoadHlsStreamTutorial.swift","content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Step 2:"}],"type":"strong"},{"type":"text","text":" Load HLS Stream by providing the entry ID and optional authorization token."}],"type":"paragraph"}],"caption":[]},{"caption":[],"runtimePreview":null,"type":"step","code":"InstallPlayerPluginTutorial.swift","content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Step 3:"}],"type":"strong"},{"text":" Add player plugin. Note: This should be done in the AppDelegate.","type":"text"}]}],"media":null},{"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Step 4:","type":"text"}]},{"type":"text","text":" Load the player view in your player view and handle errors."}]}],"media":null,"caption":[],"type":"step","code":"LoadPlayerViewTutorial.swift"}]},{"title":"Video Player Plugins (Optional)","contentSection":[{"content":[{"inlineContent":[{"type":"text","text":"The Playback SDK supports extending functionalities through custom video player plugins. These plugins can provide extended functionalities or integrate with third-party video players. Refer to the full source code for details on creating custom plugins."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["\/\/ Implement your custom player plugin conforming to VideoPlayerPlugin protocol","","\/\/ Register your custom plugin with the manager","let pluginManager = VideoPlayerPluginManager.shared","pluginManager.registerPlugin(YourCustomPlayerPlugin())","\/\/ Use the selected plugin for playback","pluginManager.selectedPlugin?.play()"]}],"kind":"contentAndMedia","mediaPosition":"trailing"}],"stepsSection":[{"type":"step","code":null,"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Step 1:"}]},{"type":"text","text":" Implement your custom player plugin conforming to the "},{"code":"VideoPlayerPlugin","type":"codeVoice"},{"text":" protocol.","type":"text"}]}],"caption":[],"media":null},{"code":null,"runtimePreview":null,"caption":[],"media":null,"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Step 2:","type":"text"}]},{"text":" Register your custom plugin with the manager and use the selected plugin for playback.","type":"text"}],"type":"paragraph"}],"type":"step"}],"anchor":"Video-Player-Plugins-Optional"},{"title":"Error Handling","contentSection":[{"mediaPosition":"trailing","kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"text":"The library propagates errors through completion handlers. You can handle these errors to provide appropriate feedback to the user.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Example:","type":"text"}]}]},{"inlineContent":[{"type":"text","text":"Swift"}],"type":"paragraph"},{"type":"codeListing","code":["PlaybackSDKManager.shared.initialize(apiKey: \"YOUR_API_KEY\") { result in","    switch result {","    case .success:","        print(\"Playback SDK initialized successfully.\")","","        let entryId = \"YOUR_ENTRY_ID\"","        let authorizationToken = \"YOUR_AUTHORIZATION_TOKEN\" \/\/ optional","","        PlaybackUIView(entryId: entryId, authorizationToken: authorizationToken)","    case .failure(let error):","        print(\"Error initializing Playback SDK: \\(error)\")","    }","}"],"syntax":null}]}],"anchor":"Error-Handling","stepsSection":[]}]},{"abstract":[{"text":"Playback SDK simplifies integrating video playback functionalities into OTT applications. It provides a unified interface for interacting with video APIs and managing playback logic.","type":"text"}],"title":"Playback SDK Overview","kind":"callToAction","action":{"type":"reference","identifier":"doc:\/\/PlaybackSDK\/tutorials\/PlaybackSDK\/CustomPluginTutorial","isActive":true,"overridingTitle":"Get started","overridingTitleInlineContent":[{"type":"text","text":"Get started"}]},"featuredEyebrow":"Tutorial"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/PlaybackSDK\/tutorials\/PlaybackSDK\/GetStarted","interfaceLanguage":"swift"},"kind":"project","metadata":{"category":"PlaybackSDK Tutorial","role":"project","title":"Playback SDK Overview","categoryPathComponent":"Table-Of-Contents"},"hierarchy":{"reference":"doc:\/\/PlaybackSDK\/tutorials\/Table-Of-Contents","paths":[["doc:\/\/PlaybackSDK\/tutorials\/Table-Of-Contents","doc:\/\/PlaybackSDK\/tutorials\/Table-Of-Contents\/$volume","doc:\/\/PlaybackSDK\/tutorials\/Table-Of-Contents\/Getting-Started"]],"modules":[{"reference":"doc:\/\/PlaybackSDK\/tutorials\/Table-Of-Contents\/Getting-Started","projects":[{"sections":[{"reference":"doc:\/\/PlaybackSDK\/tutorials\/PlaybackSDK\/GetStarted#Installation","kind":"task"},{"kind":"task","reference":"doc:\/\/PlaybackSDK\/tutorials\/PlaybackSDK\/GetStarted#Video-Player-Plugins-Optional"},{"reference":"doc:\/\/PlaybackSDK\/tutorials\/PlaybackSDK\/GetStarted#Error-Handling","kind":"task"}],"reference":"doc:\/\/PlaybackSDK\/tutorials\/PlaybackSDK\/GetStarted"}]},{"reference":"doc:\/\/PlaybackSDK\/tutorials\/Table-Of-Contents\/Creating-a-Custom-Playback-Player-Plugin","projects":[{"reference":"doc:\/\/PlaybackSDK\/tutorials\/PlaybackSDK\/CustomPluginTutorial","sections":[{"reference":"doc:\/\/PlaybackSDK\/tutorials\/PlaybackSDK\/CustomPluginTutorial#Video-Player-Plugins-Optional","kind":"task"},{"kind":"task","reference":"doc:\/\/PlaybackSDK\/tutorials\/PlaybackSDK\/CustomPluginTutorial#Error-Handling"}]}]}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/playbacksdk\/getstarted"]}],"references":{"doc://PlaybackSDK/tutorials/Table-Of-Contents":{"url":"\/tutorials\/table-of-contents","title":"Introduction to PlaybackSDK","identifier":"doc:\/\/PlaybackSDK\/tutorials\/Table-Of-Contents","kind":"overview","type":"topic","role":"overview","abstract":[{"text":"Welcome to the PlaybackSDK tutorial! In this tutorial, you will learn how to integrate and use the PlaybackSDK in your iOS applications.","type":"text"}]},"doc://PlaybackSDK/tutorials/PlaybackSDK/CustomPluginTutorial#Video-Player-Plugins-Optional":{"url":"\/tutorials\/playbacksdk\/customplugintutorial#Video-Player-Plugins-Optional","title":"Video Player Plugins (Optional)","identifier":"doc:\/\/PlaybackSDK\/tutorials\/PlaybackSDK\/CustomPluginTutorial#Video-Player-Plugins-Optional","type":"section","kind":"section","role":"pseudoSymbol","abstract":[{"text":"Playback SDK simplifies integrating video playback functionalities into OTT applications. It provides a unified interface for interacting with video APIs and managing playback logic.","type":"text"}]},"doc://PlaybackSDK/tutorials/PlaybackSDK/CustomPluginTutorial":{"url":"\/tutorials\/playbacksdk\/customplugintutorial","kind":"project","role":"project","estimatedTime":"30min","title":"Playback SDK Overview","type":"topic","identifier":"doc:\/\/PlaybackSDK\/tutorials\/PlaybackSDK\/CustomPluginTutorial","abstract":[{"type":"text","text":"Playback SDK simplifies integrating video playback functionalities into OTT applications. It provides a unified interface for interacting with video APIs and managing playback logic."}]},"doc://PlaybackSDK/tutorials/PlaybackSDK/GetStarted#Installation":{"role":"pseudoSymbol","abstract":[{"text":"Playback SDK simplifies integrating video playback functionalities into OTT applications. It provides a unified interface for interacting with video APIs and managing playback logic.","type":"text"}],"identifier":"doc:\/\/PlaybackSDK\/tutorials\/PlaybackSDK\/GetStarted#Installation","title":"Installation","kind":"section","type":"section","url":"\/tutorials\/playbacksdk\/getstarted#Installation"},"doc://PlaybackSDK/tutorials/Table-Of-Contents/Creating-a-Custom-Playback-Player-Plugin":{"role":"article","kind":"article","title":"Creating a Custom Playback Player Plugin","abstract":[],"url":"\/tutorials\/table-of-contents\/creating-a-custom-playback-player-plugin","type":"topic","identifier":"doc:\/\/PlaybackSDK\/tutorials\/Table-Of-Contents\/Creating-a-Custom-Playback-Player-Plugin"},"doc://PlaybackSDK/tutorials/PlaybackSDK/CustomPluginTutorial#Error-Handling":{"url":"\/tutorials\/playbacksdk\/customplugintutorial#Error-Handling","role":"pseudoSymbol","kind":"section","title":"Error Handling","abstract":[{"text":"Playback SDK simplifies integrating video playback functionalities into OTT applications. It provides a unified interface for interacting with video APIs and managing playback logic.","type":"text"}],"type":"section","identifier":"doc:\/\/PlaybackSDK\/tutorials\/PlaybackSDK\/CustomPluginTutorial#Error-Handling"},"doc://PlaybackSDK/tutorials/Table-Of-Contents/Getting-Started":{"role":"article","kind":"article","title":"Getting Started","abstract":[],"url":"\/tutorials\/table-of-contents\/getting-started","type":"topic","identifier":"doc:\/\/PlaybackSDK\/tutorials\/Table-Of-Contents\/Getting-Started"},"doc://PlaybackSDK/tutorials/PlaybackSDK/GetStarted#Error-Handling":{"url":"\/tutorials\/playbacksdk\/getstarted#Error-Handling","title":"Error Handling","identifier":"doc:\/\/PlaybackSDK\/tutorials\/PlaybackSDK\/GetStarted#Error-Handling","kind":"section","type":"section","role":"pseudoSymbol","abstract":[{"text":"Playback SDK simplifies integrating video playback functionalities into OTT applications. It provides a unified interface for interacting with video APIs and managing playback logic.","type":"text"}]},"InitializeSdkExample.swift":{"fileType":"","fileName":"InitializeSdkExample","content":["\/\/","\/\/  InitializeSdkExample.swift","\/\/  ","\/\/","\/\/  Created by Franco Driansetti on 27\/02\/2024.","\/\/","","import PlaybackSDK","","PlaybackSDKManager.shared.initialize(apiKey: \"YOUR_API_KEY\") { result in","    switch result {","    case .success:","        print(\"Playback SDK initialized successfully.\")","    case .failure(let error):","        print(\"Error initializing Playback SDK: \\(error)\")","    }","}"],"highlights":[],"syntax":"","type":"file","identifier":"InitializeSdkExample.swift"},"InstallPlayerPluginTutorial.swift":{"fileType":"","fileName":"InstallPlayerPluginTutorial","content":["\/\/","\/\/  InstallPlayerPluginTutorial.swift","\/\/","\/\/","\/\/  Created by Franco Driansetti on 27\/02\/2024.","\/\/","","import Foundation","","PlayBackSDKManager.shared.initialize(apiKey: settingsManager.apiKey, baseURL: settingsManager.baseURL) { result in","    switch result {","    case .success(let license):","        print(\"SDK initialized with license: \\(license)\")","        ","        \/\/ Add player plugin","        let bitmovinPlugin = BitmovinPlayerPlugin()","        VideoPlayerPluginManager.shared.registerPlugin(bitmovinPlugin)","        ","    case .failure(let error):","        print(\"SDK initialization failed with error: \\(error)\")","    }","}"],"highlights":[],"syntax":"","type":"file","identifier":"InstallPlayerPluginTutorial.swift"},"LoadHlsStreamTutorial.swift":{"fileType":"","fileName":"LoadHlsStreamTutorial","content":["\/\/","\/\/  LoadHlsStreamTutorial.swift","\/\/  ","\/\/","\/\/  Created by Franco Driansetti on 27\/02\/2024.","\/\/","","import Foundation","","import SwiftUI","","internal struct ContentView: View {","    let entryId = \"YOUR_ENTRY_ID\"","    let authorizationToken = \"YOUR_AUTHORIZATION_TOKEN\" \/\/ optional","","","    var body: some View {","        PlaybackUIView(entryId: entryId, authorizationToken: authorizationToken)","    }","}","","struct ContentView_Previews: PreviewProvider {","    static var previews: some View {","        ContentView()","    }","}"],"highlights":[],"syntax":"","type":"file","identifier":"LoadHlsStreamTutorial.swift"},"doc://PlaybackSDK/tutorials/PlaybackSDK/GetStarted#Video-Player-Plugins-Optional":{"role":"pseudoSymbol","kind":"section","title":"Video Player Plugins (Optional)","identifier":"doc:\/\/PlaybackSDK\/tutorials\/PlaybackSDK\/GetStarted#Video-Player-Plugins-Optional","url":"\/tutorials\/playbacksdk\/getstarted#Video-Player-Plugins-Optional","abstract":[{"text":"Playback SDK simplifies integrating video playback functionalities into OTT applications. It provides a unified interface for interacting with video APIs and managing playback logic.","type":"text"}],"type":"section"},"LoadPlayerViewTutorial.swift":{"fileType":"","fileName":"LoadPlayerViewTutorial","content":["\/\/","\/\/  LoadPlayerViewTutorial.swift","\/\/  ","\/\/","\/\/  Created by Franco Driansetti on 27\/02\/2024.","\/\/","","import Foundation","","PlayBackSDKManager.shared.loadPlayer(entryID: settingsManager.entryId, authorizationToken: settingsManager.authorizationToken, onError: { error in","    \/\/ Handle the error here","    switch error {","    case .apiError(let statusCode, _):","        print(\"\\(statusCode)\")","    default:","        print(\"Error loading HLS stream in PlaybackUIView: \\(error.localizedDescription)\")","    }","})"],"highlights":[],"syntax":"","type":"file","identifier":"LoadPlayerViewTutorial.swift"},"doc://PlaybackSDK/tutorials/PlaybackSDK/GetStarted":{"role":"project","type":"topic","estimatedTime":"30min","abstract":[{"text":"Playback SDK simplifies integrating video playback functionalities into OTT applications. It provides a unified interface for interacting with video APIs and managing playback logic.","type":"text"}],"title":"Playback SDK Overview","url":"\/tutorials\/playbacksdk\/getstarted","kind":"project","identifier":"doc:\/\/PlaybackSDK\/tutorials\/PlaybackSDK\/GetStarted"}}}